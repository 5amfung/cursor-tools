<cursor-tools Integration>
Use the following commands to get AI assistance:

cursor-tools web "your question"  - Get answers from the web using Perplexity AI
cursor-tools repo "your question" - Get context-aware answers about this repository using Google Gemini
cursor-tools doc [options] - Generate comprehensive documentation for this repository

cursor-tools web is good for getting up-to-date information from the web that are not repository specific. For example, you can ask it to get the names and details of the latest OpenAI models or details about an external API.
cursor-tools repo has the entire repository context available to it so it is good for repository search and tasks that require holistic understanding such as planning, debugging and answering questions about the architecture.
cursor-tools doc can generate comprehensive documentation for your repository, with options like --output to save to a file and --fromGithub to document a remote GitHub repository.

Running the commands:
1. Using the installed version:
   If cursor-tools is not found in your PATH, you can run it with \`npm exec cursor-tools "your question"\` or \`yarn cursor-tools "your question"\` or \`pnpm cursor-tools "your question"\` depending on your package manager if cursor-tools is installed as a dependency. If cursor-tools is not installed as a dependency you should fall back to using \`npx cursor-tools "your question"\`.

2. For development (running latest code without building):
   Use \`pnpm dev\` to run the latest code directly:
   \`pnpm dev web "your question"\`
   \`pnpm dev repo "your question"\`
   \`pnpm dev doc [options]\`

Note: configuration is in cursor-tools.config.json (falling back to ~/.cursor-tools/config.json)
Note: api keys are loaded from .cursor-tools.env (falling back to ~/.cursor-tools/.env)

Publishing and Releasing:
To release a new version:
1. Update version in package.json (follow semver)
2. Add entry to CHANGELOG.md documenting changes
3. Run `pnpm run release` which will:
   - Lint and format code
   - Build the package
   - Commit changes with message 'release'
   - Publish to npm
   - Push to GitHub

The package is distributed as an ES Module and requires Node.js 20 or later.
</cursor-tools Integration>
